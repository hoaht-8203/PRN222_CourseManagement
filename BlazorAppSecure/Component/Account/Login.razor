@page "/login"

@using AntDesign
@using BlazorAppSecure.Sevices
@using System.ComponentModel.DataAnnotations;
@using System.Text.Json;

@inject IAccountManagement Acct
@inject NavigationManager Navigation
@inject IMessageService _message

@layout EmptyLayout

<AuthorizeView>
    <Authorized>
        <Result Status="ResultStatus.Warning" Title="@($"You're already logged in as {context.User.Identity?.Name}.")">
            <Extra>
                <Button Type="ButtonType.Primary" OnClick="HandleGoToHomepage">Go To Homapage</Button>
            </Extra>
        </Result>
    </Authorized>
    <NotAuthorized>
        <div class="login-page">
            <Card Style="width: 500px">
                <ChildContent>
                    <Form Model="@loginModel" OnFinish="OnFinish" LabelColSpan="10" Context="formContext" class="login-form">
                        <FormItem Label="Email">
                            <Input @bind-Value="@formContext.Email" />
                        </FormItem>
                        <FormItem Label="Password">
                            <InputPassword @bind-Value="@formContext.Password" />
                        </FormItem>
                        <FormItem WrapperColOffset="10">
                            <Button Type="ButtonType.Primary" HtmlType="submit">
                                Login
                            </Button>
                        </FormItem>
                        <p>
                            Not has an account?
                            <NavLink href="register">
                                Register
                            </NavLink>
                        </p>
                        <p>
                            <Button Type="ButtonType.Link" OnClick="HandleForgotPassword">
                                Forgot Password?
                            </Button>
                        </p>
                    </Form>
                </ChildContent>
            </Card>
        </div>
    </NotAuthorized>
</AuthorizeView>
@code {
    public class LoginModel {
        [Required]
        public string Email { get; set; }
        [Required]
        public string Password { get; set; }
    }

    private LoginModel loginModel = new LoginModel();

    private async void OnFinish() {
        await DoLoginAsync();
    }


    public async Task DoLoginAsync()
    {

        var result = await Acct.LoginAsync(loginModel.Email, loginModel.Password);

        if (result.Succeeded)
        {
            loginModel = new LoginModel();
            Navigation.NavigateTo("/");
        }
        else
        {
            result.ErrorList.ForEach((err) => {
                _message.Error(err);
            });
            
        }
    }

    public void HandleGoToHomepage() {
        Navigation.NavigateTo("/");
    }
    public void HandleForgotPassword()
    {
        Navigation.NavigateTo("/forgot-password");
    }
}

<style>
    .login-page {
        padding-top: 100px;
        display: flex;
        justify-content: center;
    }

    .login-form .ant-form-item-label {
        text-align: left
    }
</style>