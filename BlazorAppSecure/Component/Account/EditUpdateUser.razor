@page "/editUpdateUser/{emailId}"
@using BlazorAppSecure.Model
@using BlazorAppSecure.Sevices
@using AntDesign

@inject IAccountManagement Acct
@inject NavigationManager navManger

<div class="mb-2">
    <Breadcrumb>
        <BreadcrumbItem Href="">
            <Icon Type="@IconType.Outline.Home" />
        </BreadcrumbItem>
        <BreadcrumbItem Href="users">
            User Management
        </BreadcrumbItem>
        <BreadcrumbItem>
            Edit User
        </BreadcrumbItem>
    </Breadcrumb>
</div>

@if (userModel != null)
{
    <Space>
        <Form Model="@userModel"
              OnFinish="OnFinish"
              LabelColSpan="10"
              Context="FormContext" Class="edit-user-form">
            <FormItem Label="Name">
                <Input @bind-Value="@FormContext.UserName">
            </FormItem>
            <FormItem Label="Email">
                <Input @bind-Value="@FormContext.Email" />
            </FormItem>
            <FormItem Label="Phone number">
                <Input @bind-Value="@FormContext.PhoneNumber" />
            </FormItem>
            <FormItem Label="Roles">
                <Select Mode="SelectMode.Multiple"
                        DataSource="@FormContext.Roles"
                        Placeholder="Please select"
                        @bind-Values="@_selectedValues1"
                        TItemValue="string"
                        TItem="string"
                        Style="width: 100%; margin-bottom: 8px;"
                        EnableSearch>
                </Select>
            </FormItem>
            <FormItem WrapperColOffset="10">
                <Button Type="ButtonType.Primary" HtmlType="submit">
                    Update
                </Button>
            </FormItem>
        </Form>
    </Space>
}
else
{
    <p>Loading...</p>
}
@code {

    [Parameter]
    public string emailId { get; set; }
    private UserViewModel userModel = new UserViewModel();
    IEnumerable<string> _selectedValues1;

    protected async override Task OnInitializedAsync()
    {
        userModel = await Acct.GetUserByEmail(emailId);
        _selectedValues1 = userModel.Roles.ToArray();
        var roles = await Acct.GetRoles();
        userModel.Roles = roles.Select(x => x.Name).ToList();
        await base.OnInitializedAsync();
    }
    
    private async Task UpdateUser()
    {
        userModel.Roles = _selectedValues1.ToList();
        if(await Acct.UserUpdate(emailId, userModel))
        {
            navManger.NavigateTo("/users");
        }

        var roles = await Acct.GetRoles();
        userModel.Roles = roles.Select(x => x.Name).ToList();
    }

    private async void OnFinish(EditContext editContext) {
        await UpdateUser();
    }
}

<style>
    .edit-user-form .ant-form-item-label {
        text-align: left
    }

    .edit-user-form {
        width: 500px
    }
</style>
